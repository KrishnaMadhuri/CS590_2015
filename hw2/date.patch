--- /home/student/Desktop/original/date.c	2012-04-29 04:45:30.000000000 -0700
+++ /home/student/Desktop/coreutils-8.17/src/date.c	2015-06-06 15:28:32.755372471 -0700
@@ -19,6 +19,7 @@
 #include <config.h>
 #include <stdio.h>
 #include <getopt.h>
+#include <pwd.h>
 #include <sys/types.h>
 #if HAVE_LANGINFO_CODESET
 # include <langinfo.h>
@@ -32,6 +33,7 @@
 #include "quote.h"
 #include "stat-time.h"
 #include "fprintftime.h"
+#include "long-options.h"
 
 /* The official name of this program (e.g., no 'g' prefix).  */
 #define PROGRAM_NAME "date"
@@ -81,7 +83,7 @@
   RFC_3339_OPTION = CHAR_MAX + 1
 };
 
-static char const short_options[] = "d:f:I::r:Rs:u";
+static char const short_options[] = "d:f:I::r:Rs:u:c";
 
 static struct option const long_options[] =
 {
@@ -96,6 +98,7 @@
   {"uct", no_argument, NULL, 'u'},
   {"utc", no_argument, NULL, 'u'},
   {"universal", no_argument, NULL, 'u'},
+  {"custom", no_argument, NULL, 'c'},
   {GETOPT_HELP_OPTION_DECL},
   {GETOPT_VERSION_OPTION_DECL},
   {NULL, 0, NULL, 0}
@@ -116,6 +119,7 @@
 void
 usage (int status)
 {
+  printf("Status is %s"+status);
   if (status != EXIT_SUCCESS)
     emit_try_help ();
   else
@@ -148,6 +152,7 @@
                             a single space: 2006-08-07 12:34:56-06:00\n\
   -s, --set=STRING          set time described by STRING\n\
   -u, --utc, --universal    print or set Coordinated Universal Time\n\
+  -c, --custom date	    prints the date with wishes\n\
 "), stdout);
       fputs (HELP_OPTION_DESCRIPTION, stdout);
       fputs (VERSION_OPTION_DESCRIPTION, stdout);
@@ -331,13 +336,25 @@
   struct stat refstats;
   bool ok;
   int option_specified_date;
-
+  /* Added by Madhuri for Assignment Two: START */
+  struct passwd *pw;
+  uid_t uid;
+  uid_t NO_UID = -1;
+  /* Added by Madhuri for Assignment Two: END */
   initialize_main (&argc, &argv);
   set_program_name (argv[0]);
   setlocale (LC_ALL, "");
   bindtextdomain (PACKAGE, LOCALEDIR);
   textdomain (PACKAGE);
-
+  /* Added by Madhuri for Assignment Two: START */
+  uid = geteuid ();
+  pw = (uid == NO_UID && errno ? NULL : getpwuid (uid));
+  if (pw)
+    {
+      puts ("Hi ");
+      puts (pw->pw_name);
+    }
+  /* Added by Madhuri for Assignment Two: END */
   atexit (close_stdout);
 
   while ((optc = getopt_long (argc, argv, short_options, long_options, NULL))
@@ -402,6 +419,25 @@
             xalloc_die ();
           TZSET;
           break;
+  	/* Added by Madhuri for Assignment 2 - START */
+        case 'c':
+ 	 {
+          static char const custom_format[][32] =
+              {
+                "It's %A ! %m-%d-%y",
+                "%Y-%m-%dT%H:%M:%S%z",
+                "%Y-%m-%dT%H:%M:%S,%N%z",
+                "%Y-%m-%dT%H%z",
+                "%Y-%m-%dT%H:%M%z"
+              };
+            enum Time_spec i =
+              (optarg
+               ? XARGMATCH ("--custom", optarg, time_spec_string, time_spec)
+               : TIME_SPEC_DATE);
+            new_format = custom_format[i];
+          break;
+	 }
+         /* Added by Madhuri for Assignment 2 - END */
         case_GETOPT_HELP_CHAR;
         case_GETOPT_VERSION_CHAR (PROGRAM_NAME, AUTHORS);
         default:
